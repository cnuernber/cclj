(defn sum|f32 [ data|ptr[f32] len|u32 ]
  (let [retval 0|f32]
    (for [idx 0|u32]
		 (< idx len)
		 [(set idx (+ idx 1))]
	  (+ retval (deref data idx)))
	retval))
	


(defn inc-array|ptr[f32] [len|i32]
  (let [new-data (malloc|f32 len)]
    (for [idx 0|u32]
	     (< idx len)
		 [(set idx (+ idx 1))]
	  (+ retval (static-cast|f32 idx)))
	new-data))
	
	

(let [array-len 10|u32
	  data-buffer (inc-array array-len)
      result (sum data-buf array-len)
	  ignored (free data-buf)]
  result)