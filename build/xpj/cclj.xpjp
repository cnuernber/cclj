<?xml version="1.0" encoding="UTF-8" ?>
<xpjp version="1.0">
	<perl>
sub artifact_name
{
	my $config_name = shift;
	my $config_type = shift;
	my $platform = lc($xpj->{platform});
	my $target_name = $xpj->{target_name}; #name of the currently processing target
	my $base_name = $target_name;
	if ( $config_name ne "Release" ) { $base_name = "$target_name$config_name"; }
	if ( ($platform eq 'win32') || ($platform eq 'win64') ) {
		if ( $config_type eq 'static_library' ) {
			return "$base_name.lib";
		}
		elsif( $config_type eq 'dynamic_library' ) {
			return "$base_name.dll";
		}
		else {
			return "$base_name.exe";
		}
	}
	return $base_name;
}
	</perl>
	<template name="base_config_t">
		<!-- config name is anything you want.  Config type is static_library, dynamic_library, executable, console_executable -->
		<configuration name="{{[$tempvar->{config_name}]}}">
		  <configuration-type>{{[$tempvar->{config_type}]}}</configuration-type>
		  <set-artifact-name>{{[artifact_name($tempvar->{config_name}, $tempvar->{config_type})]}}</set-artifact-name>
		</configuration>
	</template>
	
	<!-- Call a given template twice forwarding all arguments to that template but also adding
		$tempvar->{'config_name'} to be either release or debug -->
	<template name="debug_release_t">
		<apply-template name="{{[$tempvar->{template}]}}">
			<define key="config_name" value="Debug"/>
			<!-- forward any key/value pairs to the template -->
			<forward-defines/>
		</apply-template>
		<apply-template name="{{[$tempvar->{template}]}}">
			<define key="config_name" value="Release"/>
			<!-- forward any key/value pairs to the template -->
			<forward-defines/>
		</apply-template>
	</template>

	<!--We rely on the default configs being appropriate for debug in general-->
	<template name="default_debug_release_config_t">
	  <configuration name="Release">
		<optimization>max-speed</optimization>
		<use-debug-libraries>false</use-debug-libraries>
		<function-level-linking>true</function-level-linking>
		<enable-comdat-folding>true</enable-comdat-folding>
		<optimize-references>true</optimize-references>
	  </configuration>
	</template>
	
	<template name="static_lib_t">
		<apply-template name="debug_release_t">
			<forward-defines/>
			<define key="template" value="base_config_t"/>
			<define key="config_type" value="static-library"/>
		</apply-template>
		<apply-template name="default_debug_release_config_t"/>
	</template>
	
	<project name="cclj">
		<projdir>../{{["$xpj->{tool}" . "$xpj->{platform}"]}}</projdir>

		<!-- everything else is relative to the project dir -->
		<libdir>../../lib/{{[$xpj->{platform}]}}</libdir>
		<bindir>../../bin/{{[$xpj->{platform}]}}</bindir>
		<builddir>../{{["$xpj->{tool}" . "$xpj->{platform}"]}}/build"</builddir>
		<target name="gtest">
			<apply-template name="static_lib_t"/>
			<preprocessor>
				_VARIADIC_MAX=10
			</preprocessor>
			<search type="header">
				../../gtest
				../../gtest/include
			</search>
			<files name="include" root="../../gtest/include/gtest">
			  *
			  internal/*
			</files>
			<files name="src" root="../../gtest/src">
				*
				-gtest_main.cc
				-gtest-all.cc
			</files>
		</target>
	</project>
</xpjp>